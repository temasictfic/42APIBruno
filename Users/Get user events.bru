meta {
  name: Get user events
  type: http
  seq: 19
}

get {
  url: {{baseUrl}}/users/:user_id/events
  body: none
  auth: inherit
}

params:path {
  user_id: {{userID}}
}

script:post-response {
  // Get the response body
  const jsonResponse = res.getBody();
  
  // Count events by kind using functional approach
  const kindCounts = jsonResponse.reduce((counts, event) => {
      const { kind } = event;
      return {
          ...counts,
          [kind]: (counts[kind] || 0) + 1
      };
  }, {});
  
  // Transform the count data into row format for the table
  const rowData = Object.entries(kindCounts).map(([kind, count]) => ({
      kind: kind,
      count: count
  }));
  
  // Define the columns for the table
  const columnDefinitions = [
      { field: "kind", filter: true, floatingFilter: true },
      { field: "count", filter: true, floatingFilter: true }
  ];
  
  // Visualize the data as a table
  bru.visualize('table', {
      name: 'eventKindCounts',
      provider: 'ag-grid',
      props: { rowData, columnDefinitions }
  });
  
  
}
